from fastapi import FastAPI, Request
from pydantic import BaseModel
from fastapi.responses import JSONResponse

app = FastAPI()

# ðŸ”§ StaÅ‚y opis kobiecej postaci
OPIS_KOBIETY = (
    "MÅ‚oda kobieta o delikatnych, regularnych rysach twarzy, ktÃ³re emanujÄ… spokojem i pewnoÅ›ciÄ… siebie. "
    "Jej cera jest jasna, gÅ‚adka, z naturalnym, zdrowym rumieÅ„cem. "
    "WÅ‚osy opadajÄ… prosto na ramiona â€“ sÄ… jasnobrÄ…zowe, gÄ™ste i miÄ™kkie jak jedwab, z lekko wycieniowanymi koÅ„cÃ³wkami. "
    "Z przodu ma prostÄ…, peÅ‚nÄ… grzywkÄ™, ktÃ³ra delikatnie siÄ™ga do linii brwi, nadajÄ…c jej twarzy dziewczÄ™cej Å›wieÅ¼oÅ›ci. "
    "Jej oczy sÄ… duÅ¼e i jasne â€“ nawet jeÅ›li nie widaÄ‡ dokÅ‚adnego koloru, bije od nich uwaÅ¼noÅ›Ä‡ i Å‚agodnoÅ›Ä‡. "
    "Usta sÄ… naturalne, lekko peÅ‚ne, zrelaksowane â€“ jakby byÅ‚a na chwilÄ™ zamyÅ›lona, ale zaraz gotowa do uÅ›miechu."
)

class PromptRequest(BaseModel):
    prompt: str

class ImageResponse(BaseModel):
    finalPrompt: str
    imageUrl: str

def zawiera_stylizacje_na_kobiecie(prompt: str) -> bool:
    stylizacja = ["kobieta", "modelka", "dziewczyna", "sylwetka damska", "postaÄ‡ kobieca"]
    return "stylizacja" in prompt.lower() and any(w in prompt.lower() for w in stylizacja)

@app.post("/generate-image", response_model=ImageResponse)
async def generate_image(req: PromptRequest):
    final_prompt = req.prompt
    if zawiera_stylizacje_na_kobiecie(req.prompt):
        final_prompt += " " + OPIS_KOBIETY

    # ðŸ”„ W tym miejscu moÅ¼na podpiÄ…Ä‡ prawdziwe API do generowania obrazÃ³w
    # Na razie zwracamy przykÅ‚adowy URL
    return {
        "finalPrompt": final_prompt,
        "imageUrl": "https://example.com/generated-image.jpg"
    }
